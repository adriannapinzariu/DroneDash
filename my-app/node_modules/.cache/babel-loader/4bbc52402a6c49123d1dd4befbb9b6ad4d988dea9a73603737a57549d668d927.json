{"ast":null,"code":"var _jsxFileName = \"/Users/adriannapinzariu/DroneDash-6/my-app/src/dashbot/Dashbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./Dashbot.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashBot = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    text: \"Hi! How can I assist you today?\",\n    sender: \"bot\"\n  }]);\n  const [input, setInput] = useState(\"\");\n  const [isOpen, setIsOpen] = useState(false);\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const newMessages = [...messages, {\n      text: input,\n      sender: \"user\"\n    }];\n    setMessages(newMessages);\n    setInput(\"\");\n    try {\n      const response = await axios.post(\"https://api.openai.com/v1/chat/completions\", {\n        model: \"gpt-4\",\n        messages: newMessages.map(msg => ({\n          role: msg.sender === \"bot\" ? \"assistant\" : \"user\",\n          content: msg.text\n        }))\n      }, {\n        headers: {\n          Authorization: `Bearer YOUR_OPENAI_API_KEY`,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const botReply = response.data.choices[0].message.content;\n      setMessages([...newMessages, {\n        text: botReply,\n        sender: \"bot\"\n      }]);\n    } catch (error) {\n      console.error(\"Error fetching response:\", error);\n      setMessages([...newMessages, {\n        text: \"Sorry, I couldn't process that request.\",\n        sender: \"bot\"\n      }]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `chatbot-container ${isOpen ? \"open\" : \"\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"chatbot-toggle\",\n      onClick: () => setIsOpen(!isOpen),\n      children: \"\\uD83E\\uDD16 Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"DashBot \\uD83E\\uDD16\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsOpen(false),\n          children: \"\\u2716\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-messages\",\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${msg.sender}`,\n          children: msg.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Type your message...\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyDown: e => e.key === \"Enter\" && sendMessage()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(DashBot, \"BDT4ut1apzZSX1FwG5PBWJSyTuA=\");\n_c = DashBot;\nexport default DashBot;\nvar _c;\n$RefreshReg$(_c, \"DashBot\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","DashBot","_s","messages","setMessages","text","sender","input","setInput","isOpen","setIsOpen","sendMessage","trim","newMessages","response","post","model","map","msg","role","content","headers","Authorization","botReply","data","choices","message","error","console","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","index","type","placeholder","value","onChange","e","target","onKeyDown","key","_c","$RefreshReg$"],"sources":["/Users/adriannapinzariu/DroneDash-6/my-app/src/dashbot/Dashbot.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./Dashbot.css\";\n\nconst DashBot = () => {\n  const [messages, setMessages] = useState([{ text: \"Hi! How can I assist you today?\", sender: \"bot\" }]);\n  const [input, setInput] = useState(\"\");\n  const [isOpen, setIsOpen] = useState(false);\n\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n\n    const newMessages = [...messages, { text: input, sender: \"user\" }];\n    setMessages(newMessages);\n    setInput(\"\");\n\n    try {\n      const response = await axios.post(\n        \"https://api.openai.com/v1/chat/completions\",\n        {\n          model: \"gpt-4\",\n          messages: newMessages.map((msg) => ({ role: msg.sender === \"bot\" ? \"assistant\" : \"user\", content: msg.text })),\n        },\n        {\n          headers: {\n            Authorization: `Bearer YOUR_OPENAI_API_KEY`,\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      const botReply = response.data.choices[0].message.content;\n      setMessages([...newMessages, { text: botReply, sender: \"bot\" }]);\n    } catch (error) {\n      console.error(\"Error fetching response:\", error);\n      setMessages([...newMessages, { text: \"Sorry, I couldn't process that request.\", sender: \"bot\" }]);\n    }\n  };\n\n  return (\n    <div className={`chatbot-container ${isOpen ? \"open\" : \"\"}`}>\n      <button className=\"chatbot-toggle\" onClick={() => setIsOpen(!isOpen)}>\n        ðŸ¤– Chat\n      </button>\n\n      {isOpen && (\n        <div className=\"chatbot-box\">\n          <div className=\"chatbot-header\">\n            <h3>DashBot ðŸ¤–</h3>\n            <button onClick={() => setIsOpen(false)}>âœ–</button>\n          </div>\n\n          <div className=\"chatbot-messages\">\n            {messages.map((msg, index) => (\n              <div key={index} className={`message ${msg.sender}`}>\n                {msg.text}\n              </div>\n            ))}\n          </div>\n\n          <div className=\"chatbot-input\">\n            <input\n              type=\"text\"\n              placeholder=\"Type your message...\"\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n              onKeyDown={(e) => e.key === \"Enter\" && sendMessage()}\n            />\n            <button onClick={sendMessage}>Send</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DashBot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}